apply plugin: 'com.marklogic.ml-gradle'

repositories { 
  maven { 
    url "http://developer.marklogic.com/maven2"
  } 
}

dependencies {
  compile('com.marklogic:marklogic-client-api:4.0.3')
  compile('io.codearte.jfairy:jfairy:0.5.8')
  compile('ch.qos.logback:logback-classic:1.2.3')
  compile('com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.9.2')
}

// default run the person example
def exampleDir = project.findProperty('exampleDir') ?: 'example'

ext {
    mlAppConfig {
        modulePaths.add( exampleDir + "/ml-modules")
        schemasPath = exampleDir + "/ml-schemas"
        configDir = new com.marklogic.appdeployer.ConfigDir(new java.io.File(exampleDir + "/ml-config"))
        createTriggersDatabase = false
    }
}

task runExamplePerson(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.person.PersonExplorer'
}
task runExampleRaces(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.race.ExamplesLoader'
}
task runExampleSuppliers(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.suppliers.SuppliersParts'
}
task runExampleVersions(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.versions.HubRunner'
}

task runExampleEls(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.els.ElementLevelSecurityExample'
}
task genCode(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.marklogic.entityservices.examples.CodeGenerator'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}
