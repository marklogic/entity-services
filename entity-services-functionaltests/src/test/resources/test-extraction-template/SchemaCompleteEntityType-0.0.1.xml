<?xml version="1.0" encoding="UTF-8"?>
<template xmlns="http://marklogic.com/xdmp/tde">
  <description>Extraction Template Generated from Entity Type Document
graph uri: http://marklogic.com/testing-entity-type#SchemaCompleteEntityType-0.0.1</description>
  <context>//es:instance[es:info/es:version = "0.0.1"]</context>
  <vars>
    <var>
      <name>RDF</name>
      <val>"http://www.w3.org/1999/02/22-rdf-syntax-ns#"</val>
    </var>
    <var>
      <name>RDF_TYPE</name>
      <val>sem:iri(concat($RDF, "type"))</val>
    </var>
  </vars>
  <path-namespaces>
    <path-namespace>
      <prefix>es</prefix>
      <namespace-uri>http://marklogic.com/entity-services</namespace-uri>
    </path-namespace>
  </path-namespaces>
  <templates>
    <template xmlns:tde="http://marklogic.com/xdmp/tde">
      <context>./SchemaCompleteEntityType</context>
      <vars>
        <var>
          <name>subject-iri</name>
          <val>sem:iri(concat("http://marklogic.com/testing-entity-type/SchemaCompleteEntityType-0.0.1/SchemaCompleteEntityType/", fn:encode-for-uri(./orderId)))</val>
        </var>
      </vars>
      <triples>
        <triple>
          <subject>
            <val>$subject-iri</val>
          </subject>
          <predicate>
            <val>$RDF_TYPE</val>
          </predicate>
          <object>
            <val>sem:iri("http://marklogic.com/testing-entity-type/SchemaCompleteEntityType-0.0.1/SchemaCompleteEntityType")</val>
          </object>
        </triple>
        <triple>
          <subject>
            <val>$subject-iri</val>
          </subject>
          <predicate>
            <val>sem:iri("http://www.w3.org/2000/01/rdf-schema#isDefinedBy")</val>
          </predicate>
          <object>
            <val>fn:base-uri(.)</val>
          </object>
        </triple>
      </triples>
    </template>
    <template xmlns:tde="http://marklogic.com/xdmp/tde">
      <context>./SchemaCompleteEntityType</context>
      <rows>
        <row>
          <schema-name>SchemaCompleteEntityType</schema-name>
          <view-name>SchemaCompleteEntityType</view-name>
          <view-layout>sparse</view-layout>
          <columns>
            <column>
              <name>orderId</name>
              <scalar-type>string</scalar-type>
              <val>orderId</val>
            </column>
            <column>
              <name>anyURIKey</name>
              <scalar-type>anyURI</scalar-type>
              <val>anyURIKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>base64BinaryKey</name>
              <scalar-type>base64Binary</scalar-type>
              <val>base64BinaryKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>booleanKey</name>
              <scalar-type>boolean</scalar-type>
              <val>booleanKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>byteKey</name>
              <scalar-type>byte</scalar-type>
              <val>byteKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>dateKey</name>
              <scalar-type>date</scalar-type>
              <val>dateKey</val>
            </column>
            <column>
              <name>dateTimeKey</name>
              <scalar-type>dateTime</scalar-type>
              <val>dateTimeKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>dayTimeDurationKey</name>
              <scalar-type>dayTimeDuration</scalar-type>
              <val>dayTimeDurationKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>decimalKey</name>
              <scalar-type>decimal</scalar-type>
              <val>decimalKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>doubleKey</name>
              <scalar-type>double</scalar-type>
              <val>doubleKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>durationKey</name>
              <scalar-type>duration</scalar-type>
              <val>durationKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>floatKey</name>
              <scalar-type>float</scalar-type>
              <val>floatKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>gDayKey</name>
              <scalar-type>gDay</scalar-type>
              <val>gDayKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>gMonthKey</name>
              <scalar-type>gMonth</scalar-type>
              <val>gMonthKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>gMonthDayKey</name>
              <scalar-type>gMonthDay</scalar-type>
              <val>gMonthDayKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>gYearKey</name>
              <scalar-type>gYear</scalar-type>
              <val>gYearKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>gYearMonthKey</name>
              <scalar-type>gYearMonth</scalar-type>
              <val>gYearMonthKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>hexBinaryKey</name>
              <scalar-type>hexBinary</scalar-type>
              <val>hexBinaryKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>intKey</name>
              <scalar-type>int</scalar-type>
              <val>intKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>integerKey</name>
              <scalar-type>integer</scalar-type>
              <val>integerKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>negativeIntegerKey</name>
              <scalar-type>negativeInteger</scalar-type>
              <val>negativeIntegerKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>nonNegativeIntegerKey</name>
              <scalar-type>nonNegativeInteger</scalar-type>
              <val>nonNegativeIntegerKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>positiveIntegerKey</name>
              <scalar-type>positiveInteger</scalar-type>
              <val>positiveIntegerKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>nonPositiveIntegerKey</name>
              <scalar-type>nonPositiveInteger</scalar-type>
              <val>nonPositiveIntegerKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>longKey</name>
              <scalar-type>long</scalar-type>
              <val>longKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>shortKey</name>
              <scalar-type>short</scalar-type>
              <val>shortKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>stringKey</name>
              <scalar-type>string</scalar-type>
              <val>stringKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>timeKey</name>
              <scalar-type>time</scalar-type>
              <val>timeKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>unsignedByteKey</name>
              <scalar-type>unsignedByte</scalar-type>
              <val>unsignedByteKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>unsignedIntKey</name>
              <scalar-type>unsignedInt</scalar-type>
              <val>unsignedIntKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>unsignedLongKey</name>
              <scalar-type>unsignedLong</scalar-type>
              <val>unsignedLongKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>unsignedShortKey</name>
              <scalar-type>unsignedShort</scalar-type>
              <val>unsignedShortKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>yearMonthDurationKey</name>
              <scalar-type>yearMonthDuration</scalar-type>
              <val>yearMonthDurationKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>iriKey</name>
              <scalar-type>IRI</scalar-type>
              <val>iriKey</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>referenceInThisFile</name>
              <scalar-type>string</scalar-type>
              <val>referenceInThisFile/OrderDetails</val>
              <nullable>true</nullable>
            </column>
            <column>
              <name>externalReference</name>
              <scalar-type>string</scalar-type>
              <val>externalReference/OrderDetails</val>
              <nullable>true</nullable>
            </column>
          </columns>
        </row>
      </rows>
      <templates>
        <template>
          <context>./arrayStringKey</context>
          <rows>
            <row>
              <schema-name>SchemaCompleteEntityType</schema-name>
              <view-name>SchemaCompleteEntityType_arrayStringKey</view-name>
              <view-layout>sparse</view-layout>
              <columns>
                <column>
                  <!--
This column joins to property orderId of SchemaCompleteEntityType
-->
                  <name>orderId</name>
                  <scalar-type>string</scalar-type>
                  <val>../orderId</val>
                </column>
                <column>
                  <!--
This column holds array values from property orderId of SchemaCompleteEntityType
-->
                  <name>arrayStringKey</name>
                  <scalar-type>string</scalar-type>
                  <val>.</val>
                  <nullable>true</nullable>
                </column>
              </columns>
            </row>
          </rows>
        </template>
        <template>
          <context>./arrayreferenceInThisFile</context>
          <rows>
            <row>
              <schema-name>SchemaCompleteEntityType</schema-name>
              <view-name>SchemaCompleteEntityType_arrayreferenceInThisFile</view-name>
              <view-layout>sparse</view-layout>
              <columns>
                <column>
                  <!--
This column joins to property orderId of SchemaCompleteEntityType
-->
                  <name>orderId</name>
                  <scalar-type>string</scalar-type>
                  <val>../orderId</val>
                </column>
                <column>
                  <name>quantity</name>
                  <scalar-type>integer</scalar-type>
                  <val>quantity</val>
                  <nullable>true</nullable>
                </column>
                <column>
                  <name>productName</name>
                  <scalar-type>string</scalar-type>
                  <val>productName</val>
                  <nullable>true</nullable>
                </column>
              </columns>
            </row>
          </rows>
        </template>
        <template>
          <context>./arrayKey</context>
          <rows>
            <row>
              <schema-name>SchemaCompleteEntityType</schema-name>
              <view-name>SchemaCompleteEntityType_arrayKey</view-name>
              <view-layout>sparse</view-layout>
              <columns>
                <column>
                  <!--
This column joins to property orderId of SchemaCompleteEntityType
-->
                  <name>orderId</name>
                  <scalar-type>string</scalar-type>
                  <val>../orderId</val>
                </column>
                <column>
                  <!--
This column holds array values from property orderId of SchemaCompleteEntityType
-->
                  <name>arrayKey</name>
                  <scalar-type>long</scalar-type>
                  <val>.</val>
                  <nullable>true</nullable>
                </column>
              </columns>
            </row>
          </rows>
        </template>
        <template>
          <context>./externalArrayReference</context>
          <rows>
            <row>
              <schema-name>SchemaCompleteEntityType</schema-name>
              <view-name>SchemaCompleteEntityType_externalArrayReference</view-name>
              <view-layout>sparse</view-layout>
              <columns>
                <column>
                  <!--
This column joins to property orderId of SchemaCompleteEntityType
-->
                  <name>orderId</name>
                  <scalar-type>string</scalar-type>
                  <val>../orderId</val>
                </column>
                <column>
                  <!--
This column joins to primary key of an external reference
-->
                  <name>externalArrayReference</name>
                  <scalar-type>string</scalar-type>
                  <val>OrderDetails</val>
                  <nullable>true</nullable>
                </column>
              </columns>
            </row>
          </rows>
        </template>
      </templates>
    </template>
    <!--
The standalone template for OrderDetails cannot be generated.  Each template row requires a primary key or at least one required property.
-->
  </templates>
</template>
