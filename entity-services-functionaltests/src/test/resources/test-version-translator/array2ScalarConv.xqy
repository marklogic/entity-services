xquery version '1.0-ml';
module namespace array2ScalarTgt-from-array2ScalarSrc
    = 'http://arr-to-scal#array2ScalarTgt-0.0.2-from-array2ScalarSrc-0.0.1';

import module namespace es = 'http://marklogic.com/entity-services'
    at '/MarkLogic/entity-services/entity-services.xqy';



declare option xdmp:mapping 'false';

(:
 This module was generated by MarkLogic Entity Services.
 Its purpose is to create instances of entity types
 defined in
 array2ScalarTgt, version 0.0.2
 from documents that were persisted according to model
 array2ScalarSrc, version 0.0.1


 For usage and extension points, see the Entity Services Developer's Guide

 https://docs.marklogic.com/guide/entity-services

 Generated at timestamp: 2017-10-25T11:24:38.459043-07:00

 Target Model array2ScalarTgt-0.0.2 Info:

 Type Customer: 
    primaryKey: CustomerID, ( in source: CustomerID )
    required: None, ( in source: None )
    range indexes: None, ( in source: None )
    word lexicons: None, ( in source: None )
    namespace: None, ( in source: None )
    namespace prefix: None, ( in source: None )
 
:)


(:~
 : Creates a map:map instance representation of the target
 : entity type Customer from an envelope document
 : containing a source entity instance, that is, instance data
 : of type Customer, version 0.0.1.
 : @param $source  An Entity Services envelope document (<es:envelope>)
 :  or a canonical XML instance of type Customer.
 : @return A map:map instance that holds the data for Customer,
 :  version 0.0.2.
 :)

declare function array2ScalarTgt-from-array2ScalarSrc:convert-instance-Customer(
    $source as node()
) as map:map
{
    let $source-node := es:init-translation-source($source, 'Customer')

    let $CustomerID := $source-node/CustomerID ! xs:string(.)
    let $CompanyName := $source-node/CompanyName ! xs:string(.)
    let $Country := $source-node/Country ! xs:string(.)
    (: Warning: potential data loss, truncated array.  :)
    let $Address := xs:string( fn:head($source-node/Address) )

    return
        es:init-instance($source, "Customer")
       (: Copy attachments from source document to the target :)
        =>es:copy-attachments($source-node)
    (: The following lines are generated from the "Customer" entity type. :)
    =>   map:with('CustomerID',   $CustomerID)
    =>es:optional('CompanyName',   $CompanyName)
    =>es:optional('Country',   $Country)
    =>es:optional('Address',   $Address)

};
    